{"version":3,"sources":["images/memories.png","components/navbar/Styles.js","context/GlobalState.js","components/navbar/NavBar.js","components/home/Styles.js","services/memoriesAPI.js","components/home/Form.js","components/memories/Styles.js","components/memories/Likes.js","components/memories/Memory.js","components/memories/Memories.js","components/home/Search.js","components/memories/MemoryModal.js","components/home/Home.js","components/auth/Icon.js","components/auth/Input.js","components/auth/Styles.js","services/UserAPI.js","components/auth/Login.js","components/auth/Signup.js","App.js","index.js"],"names":["makeStyles","theme","appBar","borderRadius","margin","display","flexDirection","justifyContent","alignItems","padding","heading","color","textDecoration","image","marginLeft","toolbar","width","profile","userName","brandContainer","purple","palette","getContrastText","deepPurple","backgroundColor","GlobalContext","React","createContext","GlobalProvider","children","useState","open","setOpen","modalMemory","setModalMemory","memories","setMemories","JSON","parse","localStorage","getItem","user","setUser","title","message","creator","name","tags","selectedFile","memoryGlobal","setMemoryGlobal","Provider","value","NavBar","useContext","history","useHistory","classes","useStyles","AppBar","className","position","Typography","component","Link","to","variant","align","src","alt","height","Toolbar","Avatar","photo","Button","logout","onClick","clear","push","root","spacing","paper","form","flexWrap","fileInput","buttonSubmit","marginBottom","axios","axiosLIB","create","interceptors","request","use","req","headers","Authorization","token","searchMemoriesAPI","query","a","get","response","console","log","getMemoriesAPI","deleteMemoryAPI","id","delete","updateLikeAPI","patch","addMemoryAPI","memory","post","updateMemoryAPI","_id","Form","useStyle","clearForm","newMemory","updateMemory","status","newMemoriesList","map","m","addMemory","data","Paper","autoComplete","noValidate","onSubmit","e","preventDefault","c","newMemoryGlobal","TextField","label","fullWidth","onChange","target","multiline","rows","split","type","multiple","onDone","base64","size","modal","pagination","pages","mainContainer","smMargin","actionDiv","textAlign","media","paddingTop","media1","backgroundSize","border","fullHeightCard","card","overlay","top","left","overlay2","right","overlay3","grid","details","cardActions","Likes","whoLikedArray","currentUser","length","find","whoLikedID","fontSize","Memory","deleteMemory","filter","memoryDelete","updateLike","updatedMemory","memoryLike","whoLiked","Card","CardMedia","fromNow","createdAt","style","memoryEdit","clickEditMemory","handleOpen","tag","gutterBottom","CardContent","CardActions","disabled","Memories","currentPage","setCurrentPage","indexOfLastItem","indexOfFirstItem","items","slice","changePage","page","Pagination","shape","count","Math","ceil","event","Grid","container","item","xs","sm","md","Search","setQuery","getAllMemories","searchMemories","MemoryModal","Modal","onClose","Home","useEffect","getMemories","Grow","in","icon","viewBox","fill","d","Input","handleChange","half","autoFocus","handleShowPassword","required","InputProps","endAdornment","InputAdornment","IconButton","marginTop","avatar","secondary","main","submit","googleButton","createUserAPI","signUpData","verifyLoginInfo","signInData","Login","signIn","formData","verifiedUser","setItem","stringify","Container","maxWidth","elevation","email","password","clientId","render","renderProps","startIcon","Icon","buttonText","onSuccess","profileObj","imageUrl","googleId","tokenId","onFailure","cookiePolicy","justify","Signup","createUser","createdUser","firstName","lastName","confirmPassword","alert","App","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8ad022e1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/memories.9cfa8a46.png\";","import { makeStyles } from '@material-ui/core/styles';\nimport { deepPurple } from '@material-ui/core/colors';\n\nexport default makeStyles((theme) => ({\n  appBar: {\n    borderRadius: 5,\n    margin: '10px 0',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '5px 30px',\n  },\n  heading: {\n    color: 'rgba(0,183,255, 1)',\n    textDecoration: 'none',\n  },\n  image: {\n    marginLeft: '15px',\n  },\n  toolbar: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    width: '400px',\n  },\n  profile: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '400px',\n  },\n  userName: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  brandContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n  },\n}));","import React, { useState } from \"react\";\nexport const GlobalContext = React.createContext(null);\nexport const GlobalProvider = ({ children }) => {\n  \n  \n  \n  const [open, setOpen] = React.useState(false);\n  const [modalMemory,setModalMemory] = useState({})\n\n  const [memories, setMemories] = useState([])\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"user\")))\n  const [memoryGlobal, setMemoryGlobal] = useState({\n    title: \"\",\n    message: \"\",\n    creator: !localStorage.getItem(\"user\") ? \"\" : JSON.parse(localStorage.getItem(\"user\")).profile.name,\n    tags: [],\n    selectedFile: \"\",\n  })\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        user,\n        setUser,\n        memoryGlobal,\n        setMemoryGlobal,\n        memories,\n        setMemories,\n        open,\n        setOpen,\n        modalMemory,\n        setModalMemory\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","import { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core'\nimport { Link, useHistory } from 'react-router-dom'\nimport memories from '../../images/memories.png'\nimport useStyles from './Styles'\nimport { GlobalContext } from '../../context/GlobalState'\nimport {useContext} from 'react'\n\nconst NavBar = () => {  \n  \n  const {user,setUser} = useContext(GlobalContext)\n\n  const history = useHistory()\n  const classes = useStyles()\n\n  const signOut = () => {\n    localStorage.clear()\n    history.push('/login')\n    setUser('')\n  }\n    return (\n      <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n      <div className={classes.brandContainer}>\n        <Typography component={Link} to=\"/\" className={classes.heading} variant=\"h3\" align=\"center\">Memories</Typography>\n        <img className={classes.image} src={memories} alt=\"icon\" height=\"40\" />\n      </div>\n      <Toolbar className={classes.toolbar}>\n      { user ? \n          (<div className={classes.profile}>\n            <Avatar className={classes.purple} alt='' src={user.profile.photo}>{user.profile.name}</Avatar>\n            <Typography className={classes.userName} variant=\"h6\">{user.profile.name}</Typography>\n            <Button variant=\"contained\" className={classes.logout} color=\"secondary\" onClick={signOut}>Logout</Button>\n          </div>)\n        : (<Button component={Link} to=\"/login\" variant=\"contained\" color=\"primary\">Sign In</Button>)\n        }\n      </Toolbar>\n    </AppBar>\n    )\n}\n\nexport default NavBar\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  form: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  fileInput: {\n    width: '97%',\n    margin: '10px 0',\n  },\n  buttonSubmit: {\n    marginBottom: 10,\n  },\n}));","import axiosLIB from \"axios\";\n\nconst axios = axiosLIB.create()\n\naxios.interceptors.request.use((req) => {\n  if (localStorage.getItem('user')) {\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('user')).token}`;\n  }\n\n  return req;\n});\n\nexport const setAuthToken = (token) => {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n}\n\nexport const searchMemoriesAPI = async (query) => {\n    const response = await axios.get(`/api/v1/memories/search?searchQuery=${query}`);\n    console.log(response)\n    return response\n}\n\nexport const getMemoriesAPI = async () => {\n    const response = await axios.get(\"/api/v1/memories\");\n    return response\n}\n\nexport const deleteMemoryAPI = async (id) => {\n    const response = await axios.delete(`/api/v1/memories/${id}`);\n    return response\n}\n\nexport const updateLikeAPI = async (id) => {\n    const response = await axios.patch(`/api/v1/memories/${id}/like`);\n    return response\n}\n\nexport const addMemoryAPI = async (memory) => {\n    const response = await axios.post(\"/api/v1/memories\", memory);\n    return response\n}\n\nexport const updateMemoryAPI =  async (memory) => {\n    const response = await axios.patch(`/api/v1/memories/${memory._id}`, memory);\n    return response\n}\n\n\n","import useStyle from \"./Styles\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport FileBase from \"react-file-base64\";\nimport { useContext } from \"react\";\nimport { GlobalContext } from \"../../context/GlobalState\"\nimport { addMemoryAPI, updateMemoryAPI } from '../../services/memoriesAPI'\n\nconst Form = () => {\n  const classes = useStyle();\n\n  const { setMemoryGlobal, memoryGlobal, memories,setMemories } = useContext(GlobalContext);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (memoryGlobal._id) {\n      updateMemory(memoryGlobal);\n    } else {\n      const c = JSON.parse(localStorage.getItem(\"user\")).profile.name\n      const newMemoryGlobal = { ...memoryGlobal, creator: c}\n      addMemory(newMemoryGlobal)\n    }\n    clearForm();\n  };\n\n  const clearForm = () => {\n    const newMemory = {...memoryGlobal,_id:null,title: \"\", message: \"\",tags: [], selectedFile: \"\"} \n    setMemoryGlobal(newMemory);\n  };\n\n  const updateMemory = async (memory) => {\n    const response = await updateMemoryAPI(memory)\n    if(response.status === 204) {\n      const newMemoriesList = memories.map((m) => {\n      if (m._id === memory._id) {\n        m = memory;\n        return m;\n      }\n      return m;\n      });\n      setMemories(newMemoriesList);\n    }\n  };\n\n  const addMemory = async (memory) => {\n    try {\n      const response = await addMemoryAPI(memory)\n      if(response.status === 200){\n        const newMemoriesList = [...memories, response.data];\n        setMemories(newMemoriesList);\n      }else{\n        console.log(response)\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  return (\n    <>\n      <Paper className={classes.paper}>\n        <form\n          autoComplete=\"off\"\n          noValidate\n          className={`${classes.root} ${classes.form}`}\n          onSubmit={handleSubmit}\n        >\n          <Typography variant=\"h6\">\n            {!memoryGlobal._id ? \"Add A Memory\" : \"Edit A Memory\"}\n          </Typography>\n          {/* <TextField\n            value={memory.creator}\n            name=\"creator\"\n            variant=\"outlined\"\n            label=\"Creator\"\n            fullWidth\n            onChange={(e) => setMemory({ ...memory, creator: e.target.value })}\n          /> */}\n          <TextField\n            value={memoryGlobal.title}\n            name=\"title\"\n            variant=\"outlined\"\n            label=\"Title\"\n            fullWidth\n            onChange={(e) => setMemoryGlobal({ ...memoryGlobal, title: e.target.value })}\n          />\n          <TextField\n            value={memoryGlobal.message}\n            name=\"message\"\n            variant=\"outlined\"\n            label=\"Message\"\n            fullWidth\n            multiline\n            rows={4}\n            onChange={(e) => setMemoryGlobal({ ...memoryGlobal, message: e.target.value })}\n          />\n          <TextField\n            value={memoryGlobal.tags}\n            name=\"tags\"\n            variant=\"outlined\"\n            label=\"Tags (coma separated)\"\n            fullWidth\n            onChange={(e) =>\n              setMemoryGlobal({ ...memoryGlobal, tags: e.target.value.split(`,`) })\n            }\n          />\n          <div className={classes.fileInput}>\n            <FileBase\n              name=\"selectedFile\"\n              type=\"file\"\n              multiple={false}\n              onDone={({ base64 }) =>\n                setMemoryGlobal({ ...memoryGlobal, selectedFile: base64 })\n              }\n            />\n          </div>\n          <Button\n            className={classes.buttonSubmit}\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            fullWidth\n          >\n            Submit\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            size=\"large\"\n            onClick={clearForm}\n            fullWidth\n          >\n            Clear\n          </Button>\n        </form>\n      </Paper>\n    </>\n  );\n};\n\nexport default Form;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  \n  modal: {\n   \n    width: '80%',\n    height: '80%',\n    margin: '50px auto'\n\n  },\n  pagination: {\n    display: 'inline',\n  },\n  pages: {\n    padding: '5px',\n    margin: '0px 0px 10px 0px',\n    alignItems: 'center',\n  },\n  mainContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: 'center',\n  },\n  media: {\n    height: 0,\n    paddingTop: '50%',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n\n  },\n  media1: {\n    paddingTop: '60%',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    backgroundSize: 'cover'\n\n  },\n  border: {\n    border: 'solid',\n  },\n  fullHeightCard: {\n    height: '100%',\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    borderRadius: '5px',\n    height: '100%',\n    position: 'relative',\n  },\n  overlay: {\n    position: 'absolute',\n    top: '20px',\n    left: '20px',\n    color: 'white',\n  },\n  overlay2: {\n    position: 'absolute',\n    top: '20px',\n    right: '40px',\n    color: 'white',\n  },\n  overlay3: {\n    position: 'absolute',\n    top: '20px',\n    right: '0px',\n    color: 'white',\n  },\n  grid: {\n    display: 'flex',\n  },\n  details: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: '10px',\n  },\n  title: {\n    padding: '0 16px',\n  },\n  cardActions: {\n    padding: '0 16px 8px 16px',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n}));","import ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\nimport ThumbUpAltOutlined from '@material-ui/icons/ThumbUpAltOutlined';\n\nconst Likes = ({whoLikedArray, currentUser }) => {\n\n    if(whoLikedArray.length>0){\n        return whoLikedArray.find((whoLikedID) => (whoLikedID === currentUser?.profile?._id))\n        ? (<><ThumbUpAltIcon fontSize=\"small\" /> { whoLikedArray.length >=2 ? `You & ${whoLikedArray.length-1} Others` : `You Like`} </>)\n        : (<><ThumbUpAltIcon fontSize=\"small\" /> { whoLikedArray.length >=2 ? `${whoLikedArray.length} Likes`: `${whoLikedArray.length} Like` }</>)\n    }\n    return <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;Like</>;\n}\n\nexport default Likes\n","import useStyle from \"./Styles\";\nimport Moment from \"react-moment\";\nimport React,{ useContext, useState } from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport OpenInNew from \"@material-ui/icons/OpenInNew\";\nimport { GlobalContext } from \"../../context/GlobalState\";\nimport Likes from \"./Likes\";\nimport { deleteMemoryAPI, updateLikeAPI } from \"../../services/memoriesAPI\";\n\n\n\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n  Typography,\n} from \"@material-ui/core/\";\n\n\n\nconst Memory = ({ memory }) => {\n  \n  const classes = useStyle()\n  \n\n  const { setModalMemory, setMemoryGlobal, memories, setMemories, user,open, setOpen } =\n    useContext(GlobalContext)\n  \n  const deleteMemory = async (id) => {\n    try {\n\n      const response = await deleteMemoryAPI(id)\n      if (response.status === 204)\n      {\n        const newMemoriesList = memories.filter((memoryDelete) => memoryDelete._id !== id);\n        setMemories(newMemoriesList);\n      }\n      else {\n        console.log(response);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const updateLike = async (id) => {\n    const token = user.token\n    console.log(\"🚀 ~ token\", token)\n    const response = await updateLikeAPI(id)\n    if(response.status === 200){\n      const updatedMemory = response.data\n      const newMemoriesList = memories.map((memoryLike) => {\n        if (memoryLike._id === updatedMemory._id) {\n          memoryLike.whoLiked = updatedMemory.whoLiked\n          return memoryLike;\n        }\n        return memoryLike;\n      })\n      setMemories(newMemoriesList);\n    }\n  }\n\n  const clickEditMemory = (id) => {\n    const m = memories.find((memoryEdit) => memoryEdit._id === id);\n    setMemoryGlobal(m);\n  }\n\n  const handleOpen = (id) => {\n    setOpen(true);\n    const m = memories.find((memoryEdit) => memoryEdit._id === id);\n    setModalMemory(m)\n  };\n\n  \n\n  \n  return (\n    <>\n    \n    <Card className={classes.card}>\n      <CardMedia className={classes.media} image={memory.selectedFile} />\n      <div className={classes.overlay}>\n        <Typography variant=\"h6\">{memory.creator}</Typography>\n        <Typography variant=\"body2\">\n          <Moment fromNow>{memory.createdAt}</Moment>\n        </Typography>\n      </div>\n      <div className={classes.overlay2}>\n        {memory.creator === user?.profile?.name &&\n        <Button\n          style={{ color: \"white\" }}\n          size=\"small\"\n          onClick={() => clickEditMemory(memory._id)}\n        >\n          <MoreHorizIcon fontSize=\"medium\" />\n        </Button>\n        }\n      </div>\n      <div className={classes.overlay3}>\n        <Button\n          style={{ color: \"white\" }}\n          size=\"small\"\n          onClick={()=> handleOpen(memory._id)}\n        >\n          <OpenInNew fontSize=\"medium\" />\n        </Button>\n      </div>\n      <div className={classes.details}>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">\n          {memory.tags.map((tag) => (\n            <span>#{tag}</span>\n          ))}\n        </Typography>\n      </div>\n      <Typography\n        className={classes.title}\n        gutterBottom\n        variant=\"h5\"\n        component=\"h2\"\n      >\n        {memory.title}\n      </Typography>\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {memory.message}\n        </Typography>\n      </CardContent>\n      <CardActions className={classes.cardActions}>\n            <Button\n          disabled={!user}\n          size=\"small\"\n          color=\"primary\"\n          onClick={() => updateLike(memory._id,user?.profile?._id)}\n        >\n          <Likes whoLikedArray={memory.whoLiked} currentUser={user}/>\n\n        </Button>\n\n        {memory.creator === user?.profile?.name && (\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            onClick={() => deleteMemory(memory._id)}\n          >\n            <DeleteIcon fontSize=\"small\" /> Delete\n          </Button>\n        )}\n      </CardActions>\n    </Card>\n    </>\n  );\n};\n\nexport default Memory;\n","import Memory from './Memory'\nimport useStyle from './Styles'\nimport { Grid, Paper } from '@material-ui/core';\nimport {Pagination} from \"@material-ui/lab\"\nimport { GlobalContext } from '../../context/GlobalState';\nimport { useContext } from 'react'\nimport React, {useState} from 'react'\n\n\nconst Memories = () => {\n\n  const classes = useStyle()\n  const numberOfItems = 6\n  const { memories} = useContext(GlobalContext)\n  const [currentPage, setCurrentPage] = useState(1)\n  const indexOfLastItem = currentPage * numberOfItems\n  const indexOfFirstItem = indexOfLastItem - numberOfItems\n  const items = memories.slice(indexOfFirstItem,indexOfLastItem)\n  \n  \n\n  const changePage = (page) => {\n    setCurrentPage(page)\n  }\n\n  if(items.length===0 && currentPage>1){\n    changePage(currentPage-1)\n  }\n  \n  \n\n  \n\n  return (\n    <>\n    \n    {\n      items.length>0 &&\n      (\n        <Paper className={classes.pages}>\n          <Pagination variant=\"outlined\" shape=\"rounded\" count={Math.ceil(memories.length/numberOfItems)} onChange={(event,page)=>changePage(page)}/>\n        </Paper>\n      )\n        \n    }\n      \n      <Grid className={classes.container} container alignItems=\"stretch\" spacing={1}>\n        {\n          items.map(memory => (\n            <Grid item xs={12} sm={12} md={4}>\n              <Memory key={memory._id} memory={memory} />\n            </Grid>\n          ))\n        }\n      </Grid>\n      \n      \n    </>\n  )\n}\n\nexport default Memories\n","import {Paper,form, Button, TextField} from '@material-ui/core'\nimport {useState} from 'react'\nimport { GlobalContext } from '../../context/GlobalState';\nimport { useContext } from 'react'\nimport { searchMemoriesAPI, getMemoriesAPI } from '../../services/memoriesAPI';\nimport useStyle from \"./Styles\";\n\n\n\nconst Search = () => {\n    \n    const classes = useStyle()\n    const [query, setQuery] = useState('')\n    const {setMemories } = useContext(GlobalContext)\n\n    const handleSearch = (e) => {\n        setQuery(e.target.value)\n    }\n\n    const getAllMemories = async () => {\n        \n        const response = await getMemoriesAPI()\n        console.log(\"🚀 ~ response\", response)\n        if (response.status === 200){\n            setMemories(response.data) \n        }\n        \n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        searchMemories()\n    }\n\n    const searchMemories = async () => {\n\n        const response = await searchMemoriesAPI(query)\n        if (response.status === 200){\n            setMemories(response.data) \n        }\n    }\n    const resetMemories= () => {\n        setQuery(\"\")\n        getAllMemories()\n    }\n\n    return (\n        <>\n        <Paper className={classes.paper}>\n        <form\n          autoComplete=\"off\"\n          noValidate\n          className={`${classes.root} ${classes.form}`}\n          onSubmit={handleSubmit}\n        >\n            <TextField\n                        value={query}\n                        name=\"search\"\n                        variant=\"outlined\"\n                        label=\"Search Memories\"\n                        fullWidth\n                        onChange={handleSearch}\n                    />\n        \n            <Button\n                className={classes.buttonSubmit}\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"large\"\n                type=\"submit\"\n                fullWidth>\n            Search\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            size=\"large\"\n            onClick={resetMemories}\n            fullWidth\n          >\n            Clear Search\n          </Button>\n        </form>\n        </Paper>\n        </>\n    )\n}\n\nexport default Search","import React from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport useStyles from \"./Styles\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {useState,useContext} from 'react'\nimport {GlobalContext} from '../../context/GlobalState'\n\n\n\n\n\nexport default function MemoryModal() {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  //const [modalStyle] = useState(getModalStyle);\n  const { modalMemory, open, setOpen } =  useContext(GlobalContext)\n  \n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n\n  return (\n    <div className={classes.root}>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {\n            <>\n                <Card className={classes.modal}>\n                    <CardMedia\n                        className={classes.media1}\n                        image={modalMemory.selectedFile}\n                        />\n    \n                </Card>\n            </>\n            \n        }\n        \n      </Modal>\n    </div>\n  );\n}","import { Paper, Typography, Grow, Grid } from \"@material-ui/core\"\nimport Form from './Form'\nimport Memories from '../memories/Memories'\nimport useStyle from './Styles'\nimport { useContext, useEffect } from 'react'\nimport { GlobalContext } from \"../../context/GlobalState\"\nimport Search from \"./Search\"\nimport { getMemoriesAPI } from '../../services/memoriesAPI'\nimport MemoryModal from '../memories/MemoryModal'\n\nconst Home = () => {\n\n  const { setMemories } = useContext(GlobalContext)\n\n  const classes = useStyle()\n\n  const {user} = useContext(GlobalContext)\n  \n\n  useEffect(() => {\n    const getMemories = async () => {\n      const response = await getMemoriesAPI()\n      if (response.status === 200){\n        setMemories(response.data) \n      }\n    }\n    getMemories()\n  }, [])// eslint-disable-line react-hooks/exhaustive-deps\n\n\n  return (\n    <>\n    <MemoryModal />\n    <Grow in>\n        \n        <Grid container justifyContent='space-between' alignItems='Strecth' spacing={3}>\n          <Grid item xs={12} md={4} sm={6}>\n          { user ? (<>\n                      <Form />\n                      <Search />\n                    </>) : (\n                  <Paper className={classes.paper}>\n                      <Typography variant=\"h6\" align=\"center\">\n                        Please Sign In to create your own memories and like other's memories.\n                      </Typography>\n                  </Paper>\n                \n                )\n          }\n          </Grid>\n          <Grid item xs={12} md={8} sm={6}>\n              <Memories />\n          </Grid>\n        </Grid>\n        \n    </Grow>\n  </>\n  )\n}\n\nexport default Home\n","import React from 'react';\n\nconst icon = () => (\n  <svg style={{ width: '20px', height: '20px' }} viewBox=\"0 0 24 24\">\n    <path\n      fill=\"currentColor\"\n      d=\"M21.35,11.1H12.18V13.83H18.69C18.36,17.64 15.19,19.27 12.19,19.27C8.36,19.27 5,16.25 5,12C5,7.9 8.2,4.73 12.2,4.73C15.29,4.73 17.1,6.7 17.1,6.7L19,4.72C19,4.72 16.56,2 12.1,2C6.42,2 2.03,6.8 2.03,12C2.03,17.05 6.16,22 12.25,22C17.6,22 21.5,18.33 21.5,12.91C21.5,11.76 21.35,11.1 21.35,11.1V11.1Z\"\n    />\n  </svg>\n);\n\nexport default icon;","import React from \"react\";\nimport { TextField, Grid, InputAdornment, IconButton } from \"@material-ui/core\";\n\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\n\nconst Input = ({\n  name,\n  handleChange,\n  label,\n  half,\n  autoFocus,\n  type,\n  handleShowPassword,\n}) => (\n  <Grid item xs={12} sm={half ? 6 : 12}>\n    <TextField\n      name={name}\n      onChange={handleChange}\n      variant=\"outlined\"\n      required\n      fullWidth\n      label={label}\n      autoFocus={autoFocus}\n      type={type}\n      InputProps={\n        name === \"password\"\n          ? {\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton onClick={handleShowPassword}>\n                    {type === \"password\" ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }\n          : null\n      }\n    />\n  </Grid>\n);\n\nexport default Input;\n","import { makeStyles } from '@material-ui/core/styles';\n\n\nexport default makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  googleButton: {\n    marginBottom: theme.spacing(2),\n  },\n}));","import axios from \"axios\";\n\n\nexport const createUserAPI = async (signUpData) => {\n      const response = await axios.post(\"/api/v1/users/signup\", signUpData);\n      return response\n  }\n\nexport const verifyLoginInfo = async (signInData) => {\n      const response = await axios.post(\"/api/v1/users/signin\", signInData);\n      return response\n  };","import Icon from './Icon'\nimport Input from './Input'\nimport useStyles from './Styles'\nimport { useContext,useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useHistory } from \"react-router-dom\"\nimport GoogleLogin from 'react-google-login'\nimport { GlobalContext } from '../../context/GlobalState'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { verifyLoginInfo } from '../../services/UserAPI'\n\nconst Login = () => {\n\n    const classes = useStyles();\n    const { setUser } = useContext(GlobalContext) \n    const history = useHistory()\n\n    useEffect(()=>{\n      if(JSON.parse(localStorage.getItem('user'))){\n        history.push('/')\n      }\n    },[])// eslint-disable-line react-hooks/exhaustive-deps\n\n    const signIn = async (formData) => {\n      try {\n        const response = await verifyLoginInfo(formData)\n        if (response.status === 201) {\n          const verifiedUser = response.data;\n          localStorage.setItem(\"user\", JSON.stringify(verifiedUser));\n          setUser(verifiedUser);\n          history.push(\"/\");\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    const loginGoogleSuccess = (response) => {\n    console.log(\"🚀 ~ response\", response)\n      const profile = {\n        name: response.profileObj.name,\n        photo: response.profileObj.imageUrl,\n        email: response.profileObj.email,\n        _id: response.profileObj.googleId\n      }\n      const token = response?.tokenId\n      const user = {profile,token}\n      localStorage.setItem(\"user\",JSON.stringify(user))\n      setUser(user)\n      history.push('/')\n    }\n    const loginGoogleFail = (response) => {\n      console.log(response)\n    }\n    const handleLoginForm = (e) => {\n        e.preventDefault()\n        const email = e.target.email.value\n        const password = e.target.password.value\n        signIn({email,password})  \n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n        <Paper className={classes.paper} elevation={3}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">Sign in</Typography>\n          <form className={classes.form} onSubmit={handleLoginForm}>\n            <Grid container spacing={2}> \n              <Input name=\"email\" label=\"Email Address\" type=\"email\" />\n              <Input name=\"password\" label=\"Password\" type='password' />\n            </Grid>\n            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} >\n              Sign In\n            </Button>\n                <GoogleLogin\n                  clientId=\"233713890537-fdf6n9o4mtd7gr3h4pv3brglpjvjtdgi.apps.googleusercontent.com\"\n                  render={renderProps => (\n                    <Button onClick={renderProps.onClick} disabled={renderProps.disabled} className={classes.googleButton} color=\"primary\" fullWidth startIcon={<Icon />} variant=\"contained\">Google Sign In</Button>\n                  )}\n                  buttonText=\"Login\"\n                  onSuccess={loginGoogleSuccess}\n                  onFailure={loginGoogleFail}\n                  cookiePolicy={'single_host_origin'}\n                />\n            <Grid container justify=\"flex-end\">\n              <Grid item>\n                <Link to=\"/signup\">Don't have an account? Sign Up</Link>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n      </Container>\n    )\n}\n\nexport default Login\n","import Input from \"./Input\";\nimport Icon from \"./Icon\";\nimport useStyles from \"./Styles\";\nimport GoogleLogin from \"react-google-login\";\nimport { useContext, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { GlobalContext } from \"../../context/GlobalState\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Typography,\n  Container,\n} from \"@material-ui/core\";\nimport { createUserAPI } from \"../../services/UserAPI\";\n\nconst Signup = () => {\n\n  const { setUser } = useContext(GlobalContext);\n  const classes = useStyles();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (JSON.parse(localStorage.getItem(\"user\"))) {\n      history.push(\"/\");\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const createUser = async (signUpData) => {\n    try {\n      const response = await createUserAPI(signUpData)\n      if (response.status === 201) {\n        const createdUser = response.data\n        localStorage.setItem(\"user\", JSON.stringify(createdUser))\n        setUser(createdUser)\n        history.push(\"/\")\n      }\n      else {\n        \n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const signUpUser = (e) => {\n    \n    e.preventDefault();\n\n    const firstName = e.target.firstName.value;\n    const lastName = e.target.lastName.value;\n    const email = e.target.email.value;\n    const password = e.target.password.value;\n    const confirmPassword = e.target.confirmPassword.value;\n\n    //validate confirmPassword\n    if (password === confirmPassword) {\n      createUser({ firstName, lastName, email, password });\n    } else {\n      alert(\"password and repeate password does not match\");\n    }\n  };\n\n\n  const loginGoogleSuccess = (response) => {\n    const profile = {\n      name: response.profileObj.name,\n      photo: response.profileObj.imageUrl,\n      email: response.profileObj.email,\n      _id: response.profileObj.googleId\n    };\n    const token = response?.tokenId;\n    const user = { profile, token };\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    setUser(user);\n    history.push(\"/\");\n  };\n\n  const loginGoogleFail = (response) => { \n    console.log(response)\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Paper className={classes.paper} elevation={3}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} onSubmit={signUpUser}>\n          <Grid container spacing={2}>\n            <Input name=\"firstName\" label=\"First Name\" autoFocus half />\n            <Input name=\"lastName\" label=\"Last Name\" half />\n            <Input name=\"email\" label=\"Email Address\" type=\"email\" />\n            <Input name=\"password\" label=\"Password\" type=\"password\" />\n            <Input\n              name=\"confirmPassword\"\n              label=\"Repeat Password\"\n              type=\"password\"\n            />\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <GoogleLogin\n            clientId=\"233713890537-fdf6n9o4mtd7gr3h4pv3brglpjvjtdgi.apps.googleusercontent.com\"\n            render={(renderProps) => (\n              <Button\n                onClick={renderProps.onClick}\n                disabled={renderProps.disabled}\n                className={classes.googleButton}\n                color=\"primary\"\n                fullWidth\n                startIcon={<Icon />}\n                variant=\"contained\"\n              >\n                Google Sign In\n              </Button>\n            )}\n            buttonText=\"Login\"\n            onSuccess={loginGoogleSuccess}\n            onFailure={loginGoogleFail}\n            cookiePolicy={\"single_host_origin\"}\n          />\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link to=\"/login\">Already have an account? Sign in</Link>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default Signup;\n","import { Container } from \"@material-ui/core\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport NavBar from \"./components/navbar/NavBar\";\nimport Home from \"./components/home/Home\";\nimport Login from \"./components/auth/Login\";\nimport Signup from \"./components/auth/Signup\";\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <BrowserRouter>\n        <Container maxWidth=\"lg\">\n          <NavBar />\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            <Route exact path=\"/signup\">\n              <Signup />\n            </Route> \n        </Container>\n      </BrowserRouter>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n      <App />,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}